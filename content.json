{"meta":{"title":"","subtitle":"","description":"","author":"","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"使用hexo和github搭建个人博客","slug":"tutorial/build_person_web (copy)","date":"2020-11-27T14:02:01.740Z","updated":"2020-11-27T14:02:01.748Z","comments":true,"path":"2020/11/27/tutorial/build_person_web (copy)/","link":"","permalink":"http://example.com/2020/11/27/tutorial/build_person_web%20(copy)/","excerpt":"","text":"本网站基于Hexo + GitHub 搭建，下面介绍搭建步骤及过程。 本地建站安装nvm安装 node.js 的最佳方式是使用 nvm (需要自备梯子). curl https://raw.github.com/creationix/nvm/master/install.sh | sh 安装node.js上述安装nvm完成后，重启终端并执行下列命令即可安装 node.js。 source ~/.profile sudo nvm install stable 安装hexosudo npm install -g hexo-cli 至此，Hexo 的安装已经完成了，下面就可以开始你的表演了。 使用hexo新建文件夹后，使用hexo init进行初始化，会生成一个默认hexo网站框架 hexo init 初始化完成后，使用生成静态网页 hexo g 那么问题来了，如何预览页面呢？这一点，hexo做得很棒，可以使用hexo s命令，启动本地服务器，这样我们就可以使用浏览器进行预览了，打开http://localhost:4000/。 hexo g 主题设置下载主题上述步骤hexo init完成后，目录下会生成theme的主题文件夹，我们可以通过 git 命令下载喜欢的主题。 cd theme/ git clone https://github.com/theme-next/hexo-theme-next next 配置主题在我们主目录中找到_config.yml配置表，查找 theme将原来默认的主题 landscape 替换为next，如下图所示。 # Extensions ## Plugins: https://hexo.io/plugins/ ## Themes: https://hexo.io/themes/ theme: next 下面就可以，使用hexo s 预览变更后的主题啦。 发布管理github建立仓库 准备一个github账号 必须建立一个以 github账号.github.io为名称的仓库 配置hexo的git npm install hexo-deployer-git --save 配置hexo的deploy # Deployment ## Docs: https://hexo.io/docs/one-command-deployment deploy: type: git repository: https://github.com/he-changxin/he-changxin.github.io branch: master hexo发布下面就可以很方便的部署到github 上了，使用hexo g 生成静态网页，使用hexo d 部署到远程github， 登录 https://he-changxin.github.io/ 就可以看到啦。 hexo g # 生成博客 hexo d # 部署博客","categories":[{"name":"Embed","slug":"Embed","permalink":"http://example.com/categories/Embed/"}],"tags":[]},{"title":"使用hexo和github搭建个人博客","slug":"tutorial/build_person_web (another copy)","date":"2020-11-27T14:01:54.684Z","updated":"2020-11-27T14:01:54.688Z","comments":true,"path":"2020/11/27/tutorial/build_person_web (another copy)/","link":"","permalink":"http://example.com/2020/11/27/tutorial/build_person_web%20(another%20copy)/","excerpt":"","text":"本网站基于Hexo + GitHub 搭建，下面介绍搭建步骤及过程。 本地建站安装nvm安装 node.js 的最佳方式是使用 nvm (需要自备梯子). curl https://raw.github.com/creationix/nvm/master/install.sh | sh 安装node.js上述安装nvm完成后，重启终端并执行下列命令即可安装 node.js。 source ~/.profile sudo nvm install stable 安装hexosudo npm install -g hexo-cli 至此，Hexo 的安装已经完成了，下面就可以开始你的表演了。 使用hexo新建文件夹后，使用hexo init进行初始化，会生成一个默认hexo网站框架 hexo init 初始化完成后，使用生成静态网页 hexo g 那么问题来了，如何预览页面呢？这一点，hexo做得很棒，可以使用hexo s命令，启动本地服务器，这样我们就可以使用浏览器进行预览了，打开http://localhost:4000/。 hexo g 主题设置下载主题上述步骤hexo init完成后，目录下会生成theme的主题文件夹，我们可以通过 git 命令下载喜欢的主题。 cd theme/ git clone https://github.com/theme-next/hexo-theme-next next 配置主题在我们主目录中找到_config.yml配置表，查找 theme将原来默认的主题 landscape 替换为next，如下图所示。 # Extensions ## Plugins: https://hexo.io/plugins/ ## Themes: https://hexo.io/themes/ theme: next 下面就可以，使用hexo s 预览变更后的主题啦。 发布管理github建立仓库 准备一个github账号 必须建立一个以 github账号.github.io为名称的仓库 配置hexo的git npm install hexo-deployer-git --save 配置hexo的deploy # Deployment ## Docs: https://hexo.io/docs/one-command-deployment deploy: type: git repository: https://github.com/he-changxin/he-changxin.github.io branch: master hexo发布下面就可以很方便的部署到github 上了，使用hexo g 生成静态网页，使用hexo d 部署到远程github， 登录 https://he-changxin.github.io/ 就可以看到啦。 hexo g # 生成博客 hexo d # 部署博客","categories":[{"name":"Work","slug":"Work","permalink":"http://example.com/categories/Work/"}],"tags":[]},{"title":"使用hexo和github搭建个人博客","slug":"tutorial/build_person_web","date":"2020-11-27T14:01:25.524Z","updated":"2020-11-27T14:01:25.540Z","comments":true,"path":"2020/11/27/tutorial/build_person_web/","link":"","permalink":"http://example.com/2020/11/27/tutorial/build_person_web/","excerpt":"","text":"本网站基于Hexo + GitHub 搭建，下面介绍搭建步骤及过程。 本地建站安装nvm安装 node.js 的最佳方式是使用 nvm (需要自备梯子). curl https://raw.github.com/creationix/nvm/master/install.sh | sh 安装node.js上述安装nvm完成后，重启终端并执行下列命令即可安装 node.js。 source ~/.profile sudo nvm install stable 安装hexosudo npm install -g hexo-cli 至此，Hexo 的安装已经完成了，下面就可以开始你的表演了。 使用hexo新建文件夹后，使用hexo init进行初始化，会生成一个默认hexo网站框架 hexo init 初始化完成后，使用生成静态网页 hexo g 那么问题来了，如何预览页面呢？这一点，hexo做得很棒，可以使用hexo s命令，启动本地服务器，这样我们就可以使用浏览器进行预览了，打开http://localhost:4000/。 hexo g 主题设置下载主题上述步骤hexo init完成后，目录下会生成theme的主题文件夹，我们可以通过 git 命令下载喜欢的主题。 cd theme/ git clone https://github.com/theme-next/hexo-theme-next next 配置主题在我们主目录中找到_config.yml配置表，查找 theme将原来默认的主题 landscape 替换为next，如下图所示。 # Extensions ## Plugins: https://hexo.io/plugins/ ## Themes: https://hexo.io/themes/ theme: next 下面就可以，使用hexo s 预览变更后的主题啦。 发布管理github建立仓库 准备一个github账号 必须建立一个以 github账号.github.io为名称的仓库 配置hexo的git npm install hexo-deployer-git --save 配置hexo的deploy # Deployment ## Docs: https://hexo.io/docs/one-command-deployment deploy: type: git repository: https://github.com/he-changxin/he-changxin.github.io branch: master hexo发布下面就可以很方便的部署到github 上了，使用hexo g 生成静态网页，使用hexo d 部署到远程github， 登录 https://he-changxin.github.io/ 就可以看到啦。 hexo g # 生成博客 hexo d # 部署博客","categories":[{"name":"Hexo","slug":"Hexo","permalink":"http://example.com/categories/Hexo/"}],"tags":[]}],"categories":[{"name":"Embed","slug":"Embed","permalink":"http://example.com/categories/Embed/"},{"name":"Work","slug":"Work","permalink":"http://example.com/categories/Work/"},{"name":"Hexo","slug":"Hexo","permalink":"http://example.com/categories/Hexo/"}],"tags":[]}